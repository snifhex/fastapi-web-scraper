version: '3.9'

services:
  scraper_db:
    image: postgres
    restart: always
    container_name: scraper_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: scraped  
    ports:
      - "5432:5432"
    networks:
      - scraper_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  scraper_redis:
    image: redis:latest
    container_name: scraper_redis
    ports:
      - "6379:6379"
    networks:
      - scraper_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - scraper_network

  scraper_service:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: scraper_service
    ports:
      - "80:80"
    environment:
      - DATABASE_URL=postgresql://postgres:password@scraper_db:5432/scraped
      - REDIS_HOST=scraper_redis
      - AWS_ENDPOINT_URL=http://minio:9000
    depends_on:
      scraper_db:
        condition: service_healthy
      scraper_redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - scraper_network

volumes:
  minio_data:

networks:
  scraper_network:
    driver: bridge